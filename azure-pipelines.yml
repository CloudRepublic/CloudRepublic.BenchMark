# ASP.NET

# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  runTests: 'false'

stages:

- stage: Build
  jobs:

  - job: PrepareBuildAndPublish
    steps:
    - task: NuGetToolInstaller@1
      displayName: 'Install nu Get'

    - task: NuGetCommand@2
      displayName: 'Restore the dependencies -'
      inputs:
        restoreSolution: '$(solution)'
        
        
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: build
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'

    # - task: VSBuild@1
    #   displayName: 'Build the project : $(buildConfiguration)'
    #   inputs:
    #     solution: '$(solution)'
    #     msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    #     platform: '$(buildPlatform)'
    #     configuration: '$(buildConfiguration)'
            
    - task: DotNetCoreCLI@2
      displayName: 'Run Tests with coverage'
      condition: and(succeeded(), eq('$(runTests))', true))
      inputs:
        command: test
        projects: '**/*Tests/*.csproj'
        arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'

    - task: DotNetCoreCLI@2
      displayName: 'Publish the project - $(buildConfiguration)'
      inputs:
        command: 'publish'
        projects: '**/*.csproj'
        publishWebProjects: false
        arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
        zipAfterPublish: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      condition: succeeded()



