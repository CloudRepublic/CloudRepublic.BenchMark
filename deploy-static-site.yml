# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# specific path build
trigger: none
  # branches:
  #   include:
  #   - '*'  # must quote since "*" is a YAML reserved character; we want a string
  # paths:
  #   exclude:
  #   - src/Azure/* 

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  runTests: 'false'
  subscription: 'Подписка Visual Studio Professional(0c3dc46e-aea9-45a1-9b97-229a4bcd84e9)'
  subscriptionId: '0c3dc46e-aea9-45a1-9b97-229a4bcd84e9'
  resourceGroupName: 'clr-rfg-storage'

stages:

- stage: BuildTestAndPublish
  jobs:
  - job: BuildCore
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'
    - task: Npm@1
      inputs:
        command: 'install'
        workingDir: '$(Build.SourcesDirectory)/src/Web'
    - task: Npm@1
      inputs:
        command: 'custom'
        workingDir: '$(Build.SourcesDirectory)/src/Web'
        customCommand: 'run build'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)/src/Web/dist'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      condition: succeeded()


- stage: DeployARMTemplates
  dependsOn: "BuildTestAndPublish"
  jobs:
  - job: DeployARMTemplatesjob
    steps:
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)/templates'
          Contents: '**'
          TargetFolder: '$(Build.ArtifactStagingDirectory)/armtemplates'

      - task: AzureResourceManagerTemplateDeployment@3
        inputs:
          deploymentScope: 'Resource Group'
          azureResourceManagerConnection: '$(subscription)'
          subscriptionId: '$(subscriptionId)'
          action: 'Create Or Update Resource Group'
          resourceGroupName: '$(resourceGroupName)'
          location: 'West Europe'
          templateLocation: 'Linked artifact'
          csmFile: '$(Build.ArtifactStagingDirectory)\armtemplates\deploy-benchmark-site.json'
          csmParametersFile: '$(Build.ArtifactStagingDirectory)\armtemplates\deploy-benchmark-site.parameters.json'
          deploymentMode: 'Incremental'
      - task: AzureCLI@2
        inputs:
          azureSubscription: 'Подписка Visual Studio Professional(0c3dc46e-aea9-45a1-9b97-229a4bcd84e9)'
          scriptType: 'ps'
          scriptLocation: 'inlineScript'
          inlineScript: 'az storage blob service-properties update --account-name clrrfgsasitebm --static-website  --404-document index.html  --index-document index.html'
      - task: AzureCLI@2
        inputs:
          azureSubscription: 'Подписка Visual Studio Professional(0c3dc46e-aea9-45a1-9b97-229a4bcd84e9)'
          scriptType: 'ps'
          scriptLocation: 'inlineScript'
          inlineScript: 'az storage account keys list  --account-name clrrfgsasitebm  --query [0].value'


- stage: deploySite
  dependsOn: ["DeployARMTemplates","BuildTestAndPublish"]
  jobs:
  - job: deploySitejob
    steps:
    - task: DownloadPipelineArtifact@2
      displayName: download the artifact

    # - task: AzureCLI@2
    #   inputs:
    #     azureSubscription: 'Подписка Visual Studio Professional(0c3dc46e-aea9-45a1-9b97-229a4bcd84e9)'
    #     scriptType: 'ps'
    #     scriptLocation: 'inlineScript'
    #     inlineScript: 'azcopy copy "$(Pipeline.Workspace)\drop" "https://clrrfgsasitebm.file.core.windows.net/?sv=2019-10-10&ss=bfqt&srt=sco&sp=rwdlacupx&se=2020-07-17T16:46:49Z&st=2020-07-17T08:46:49Z&spr=https&sig=M%2BWp3ezxTAnkltpn4DYw%2Bc%2BqccylAefjLayqP7lERSo%3D" --recursive=true'

    - task: AzureFileCopy@4
      inputs:
        SourcePath: '$(Pipeline.Workspace)\drop'
        azureSubscription: 'Подписка Visual Studio Professional(0c3dc46e-aea9-45a1-9b97-229a4bcd84e9)'
        Destination: 'AzureBlob'
        storage: 'clrrfgsasitebm'
        ContainerName: '$web'



