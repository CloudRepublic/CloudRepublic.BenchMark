{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apiManagementServiceName": {
      "type": "string",
      "defaultValue": "apim-benchmark"
    },
    "location": {
      "type": "string",
      "defaultValue": null
    },
    "sku": {
      "type": "string",
      "defaultValue": "Consumption"
    },
    "publisherEmail": {
      "type": "string",
      "defaultValue": "f.schaal@cloudrepublic.nl"
    },
    "publisherName": {
      "type": "string",
      "defaultValue": "Florian Schaal"
    },
    "apiFunctionName": {
      "type": "string",
      "defaultValue": "SomeFuncName"
    },
    "apiFunctionKey": {
      "type": "string",
      "defaultValue": null
    },
    "apiFunctionId": {
      "type": "string",
      "defaultValue": null
    },
    "apiFunctionDefaultHostname": {
      "type": "string",
      "defaultValue": null
    },
    "redisName": {
      "type": "string",
      "defaultValue": null
    },
    "redisKey": {
      "type": "string",
      "defaultValue": null
    }
  },
  "variables": {},
  "resources": [
    {
      "apiVersion": "2019-01-01",
      "name": "[parameters('apiManagementServiceName')]",
      "type": "Microsoft.ApiManagement/service",
      "location": "[parameters('location')]",
      "tags": {},
      "sku": {
        "name": "[parameters('sku')]",
        "capacity": 0
      },
      "properties": {
        "publisherEmail": "[parameters('publisherEmail')]",
        "publisherName": "[parameters('publisherName')]",
        "hostnameConfigurations": [
          {
            "type": "Proxy",
            "hostName": "[concat(parameters('apiManagementServiceName'), '.azure-api.net')]",
            "negotiateClientCertificate": false,
            "defaultSslBinding": true
          }
        ]
      },
      "resources": []
    },
    {
      "type": "Microsoft.ApiManagement/service/products",
      "apiVersion": "2019-01-01",
      "name": "[concat(parameters('apiManagementServiceName'), '/basic')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', parameters('apiManagementServiceName'))]"
      ],
      "properties": {
        "displayName": "basic",
        "description": "basic plan",
        "subscriptionRequired": true,
        "approvalRequired": true,
        "subscriptionsLimit": 1,
        "state": "published"
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "name": "[concat(parameters('apiManagementServiceName'), '/', parameters('apiFunctionName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', parameters('apiManagementServiceName'))]"
      ],
      "properties": {
        "displayName": "[parameters('apiFunctionName')]",
        "apiRevision": "1",
        "description": "[concat('Import from \"',parameters('apiFunctionName'),'\" Function App')]",
        "path": "benchmark",
        "protocols": ["https"],
        "isCurrent": true
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/backends",
      "apiVersion": "2019-01-01",
      "name": "[concat(parameters('apiManagementServiceName'), '/', parameters('apiFunctionName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', parameters('apiManagementServiceName'))]"
      ],
      "properties": {
        "description": "[parameters('apiFunctionName')]",
        "url": "[concat('https://',parameters('apiFunctionDefaultHostname'),'/api')]",
        "protocol": "http",
        "resourceId": "[concat('https://management.azure.com',parameters('apiFunctionId'))]",
        "credentials": {
          "header": {
            "x-functions-key": [
              "[concat('{{',parameters('apiFunctionName'),'-key}}')]"
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/properties",
      "apiVersion": "2019-01-01",
      "name": "[concat(parameters('apiManagementServiceName'), '/',parameters('apiFunctionName'),'-key')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', parameters('apiManagementServiceName'))]"
      ],
      "properties": {
        "displayName": "[concat(parameters('apiFunctionName'),'-key')]",
        "value": "[parameters('apiFunctionKey')]",
        "tags": ["key", "function", "auto"],
        "secret": true
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/properties",
      "apiVersion": "2019-01-01",
      "name": "[concat(parameters('apiManagementServiceName'), '/',parameters('redisName'),'-cache')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', parameters('apiManagementServiceName'))]"
      ],
      "properties": {
        "displayName": "[concat(parameters('redisName'),'-cache')]",
        "value": "[concat('benchcloud.redis.cache.windows.net:6380,password=',parameters('redisKey'),',ssl=True,abortConnect=False')]",
        "secret": true
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "name": "[concat(parameters('apiManagementServiceName'), '/',parameters('apiFunctionName'),'/get-trigger')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apiManagementServiceName'), parameters('apiFunctionName'))]",
        "[resourceId('Microsoft.ApiManagement/service', parameters('apiManagementServiceName'))]"
      ],
      "properties": {
        "displayName": "data",
        "method": "GET",
        "urlTemplate": "/data",
        "templateParameters": [],
        "request": {
          "queryParameters": [
            {
              "name": "cloudProvider",
              "description": "Specify data for a specific cloudprovider",
              "type": "string",
              "required": true,
              "values": ["Azure"]
            },
            {
              "name": "hostingEnvironment",
              "description": "Specify data for a specific hosting environment",
              "type": "string",
              "required": true,
              "values": ["Windows", "Linux"]
            },
            {
              "name": "runtime",
              "description": "Specify data for a specific runtime",
              "type": "string",
              "required": true,
              "values": ["Csharp", "Nodejs"]
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": []
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "name": "[concat(parameters('apiManagementServiceName'), '/',parameters('apiFunctionName'),'/get-trigger/policy')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apiManagementServiceName'), parameters('apiFunctionName'), 'get-trigger')]",
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apiManagementServiceName'), parameters('apiFunctionName'))]",
        "[resourceId('Microsoft.ApiManagement/service', parameters('apiManagementServiceName'))]"
      ],
      "properties": {
        "value": "[concat('<policies>\r\n  <inbound>\r\n    <base />\r\n    <set-backend-service id=\"apim-generated-policy\" backend-id=\"',parameters('apiFunctionName'),'\" />\r\n    <rewrite-uri template=\"/Trigger\" />\r\n    <cache-lookup vary-by-developer=\"false\" vary-by-developer-groups=\"false\" downstream-caching-type=\"none\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n    <cache-store duration=\"1800\" />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>')]",
        "format": "xml"
      }
    }
  ],
  "outputs": {}
}
