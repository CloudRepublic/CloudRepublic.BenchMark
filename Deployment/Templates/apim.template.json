{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apiManagementServiceName": {
      "type": "string",
      "defaultValue": "apim-benchmark"
    },
    "location": {
      "type": "string",
      "defaultValue": null
    },
    "sku": {
      "type": "string",
      "defaultValue": "Consumption"
    },
    "publisherEmail": {
      "type": "string",
      "defaultValue": "f.schaal@cloudrepublic.nl"
    },
    "publisherName": {
      "type": "string",
      "defaultValue": "Florian Schaal"
    },
    "apiFunctionName": {
      "type": "string",
      "defaultValue": null
    },
    "apiFunctionKey": {
      "type": "string",
      "defaultValue": null
    },
    "apiFunctionId": {
      "type": "string",
      "defaultValue": null
    },
    "redisName": {
      "type": "string",
      "defaultValue": null
    },
    "redisKey": {
      "type": "string",
      "defaultValue": null
    }
  },
  "variables": {},
  "resources": [
    {
      "apiVersion": "2019-01-01",
      "name": "[parameters('apiManagementServiceName')]",
      "type": "Microsoft.ApiManagement/service",
      "location": "[parameters('location')]",
      "tags": {},
      "sku": {
        "name": "[parameters('sku')]",
        "capacity": 0
      },
      "properties": {
        "publisherEmail": "[parameters('publisherEmail')]",
        "publisherName": "[parameters('publisherName')]",
        "hostnameConfigurations": [
          {
            "type": "Proxy",
            "hostName": "[concat(parameters('apiManagementServiceName'), '.azure-api.net')]",
            "negotiateClientCertificate": false,
            "defaultSslBinding": true
          }
        ]
      },
      "resources": []
    },
    {
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "name": "[concat(parameters('apiManagementServiceName'), '/', parameters('apiFunctionName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', parameters('apiManagementServiceName'))]"
      ],
      "properties": {
        "displayName": "[parameters('apiFunctionName')]",
        "apiRevision": "1",
        "description": "[concat('Import from ',parameters('apiFunctionName'),' Function App')]",
        "path": "benchmark",
        "protocols": ["https"],
        "isCurrent": true
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/backends",
      "apiVersion": "2019-01-01",
      "name": "[concat(parameters('apiManagementServiceName'), '/', parameters('apiFunctionName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', parameters('apiManagementServiceName'))]"
      ],
      "properties": {
        "description": "[parameters('apiFunctionName')]",
        "url": "[concat('https://',parameters('apiFunctionName'),'.azurewebsites.net/api')]",
        "protocol": "http",
        "resourceId": "[concat('https://management.azure.com/',parameters('apiFunctionId'))]",
        "credentials": {
          "header": {
            "x-functions-key": ["[parameters('apiFunctionKey')]"]
          }
        }
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/caches",
      "apiVersion": "2019-01-01",
      "name": "[concat(parameters('apiManagementServiceName'), '/westeurope')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', parameters('apiManagementServiceName'))]"
      ],
      "properties": {
        "connectionString": "[concat(parameters('redisName'),'.redis.cache.windows.net:6380,password=',parameters('redisKey'),',ssl=True,abortConnect=False')]"
      }
    }
  ],
  "outputs": {}
}
